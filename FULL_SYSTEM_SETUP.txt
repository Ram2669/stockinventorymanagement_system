================================================================================
🌾 SRI LAKSHMI ENTERPRISES - COMPLETE SYSTEM SETUP GUIDE
================================================================================

This guide will help you set up the complete stock management system on ANY computer
from scratch with all commands and PostgreSQL setup included.

================================================================================
📋 SYSTEM REQUIREMENTS
================================================================================

- Operating System: Windows 10+, macOS 10.14+, or Ubuntu 18.04+
- RAM: Minimum 4GB (8GB recommended)
- Storage: At least 2GB free space
- Internet: Required for initial setup

================================================================================
🗄️ STEP 1: POSTGRESQL INSTALLATION & SETUP
================================================================================

### FOR WINDOWS:
1. Download PostgreSQL from: https://www.postgresql.org/download/windows/
2. Run the installer (postgresql-17.x-x-windows-x64.exe)
3. During installation:
   - Set password for 'postgres' user (remember this!)
   - Default port: 5432 (keep this)
   - Check "Add PostgreSQL to PATH"
4. After installation, open Command Prompt as Administrator

### FOR macOS:
# Option 1: Using Homebrew (recommended)
brew install postgresql
brew services start postgresql

# Option 2: Download installer from postgresql.org
# Follow same steps as Windows

### FOR UBUNTU/LINUX:
sudo apt update
sudo apt install postgresql postgresql-contrib
sudo systemctl start postgresql
sudo systemctl enable postgresql

================================================================================
🗄️ STEP 2: POSTGRESQL DATABASE SETUP
================================================================================

### WINDOWS (Command Prompt as Administrator):
psql -U postgres
# Enter your postgres password when prompted

### macOS/LINUX (Terminal):
sudo -u postgres psql

### IN POSTGRESQL PROMPT (All Systems):
CREATE USER sri_lakshmi_user WITH PASSWORD 'your_secure_password';
CREATE DATABASE sri_lakshmi_db OWNER sri_lakshmi_user;
GRANT ALL PRIVILEGES ON DATABASE sri_lakshmi_db TO sri_lakshmi_user;
ALTER USER sri_lakshmi_user CREATEDB;
\q

================================================================================
🐍 STEP 3: PYTHON INSTALLATION
================================================================================

### WINDOWS:
1. Download from: https://www.python.org/downloads/
2. IMPORTANT: Check "Add Python to PATH" during installation
3. Verify: Open Command Prompt and run:
   python --version

### macOS:
# Usually pre-installed, but install latest version
brew install python3

### UBUNTU/LINUX:
sudo apt install python3 python3-pip python3-venv

================================================================================
📥 STEP 4: DOWNLOAD THE PROJECT
================================================================================

### Option 1: Clone from GitHub (Recommended)
git clone https://github.com/Ram2669/stockinventorymanagement_system.git
cd stockinventorymanagement_system

### Option 2: Download ZIP
1. Go to: https://github.com/Ram2669/stockinventorymanagement_system
2. Click "Code" → "Download ZIP"
3. Extract the ZIP file
4. Open terminal/command prompt in the extracted folder

================================================================================
🔧 STEP 5: PYTHON ENVIRONMENT SETUP
================================================================================

### ALL SYSTEMS:
# Create virtual environment
python -m venv venv

# Activate virtual environment
# WINDOWS:
venv\Scripts\activate

# macOS/LINUX:
source venv/bin/activate

# Install Python dependencies
pip install -r requirements.txt

# If psycopg2 installation fails, try:
# WINDOWS:
pip install psycopg2-binary

# macOS (if PostgreSQL not in PATH):
export PATH="/Library/PostgreSQL/17/bin:$PATH"
pip install psycopg2-binary

# LINUX:
sudo apt-get install libpq-dev
pip install psycopg2-binary

================================================================================
⚙️ STEP 6: CONFIGURATION
================================================================================

### Edit Environment File:
# Copy example file
cp backend/.env.example backend/.env

# Edit backend/.env file with your settings:
POSTGRES_USER=sri_lakshmi_user
POSTGRES_PASSWORD=your_secure_password
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_DB=sri_lakshmi_db
FLASK_ENV=development
FLASK_DEBUG=true
SECRET_KEY=your-secret-key-change-in-production

### Find Your Local IP Address:
# WINDOWS:
ipconfig
# Look for "IPv4 Address" (usually 192.168.x.x)

# macOS/LINUX:
ifconfig | grep "inet " | grep -v 127.0.0.1
# Look for your network IP (usually 192.168.x.x)

### Update Frontend Configuration:
# Edit frontend_simple/config.js:
# Replace YOUR_LOCAL_IP with your actual IP address
PRODUCTION_API_URL: 'http://192.168.1.29:5001/api',

# Edit docs/config.js (for GitHub Pages):
# Replace YOUR_LOCAL_IP with your actual IP address
PRODUCTION_API_URL: 'http://192.168.1.29:5001/api',

================================================================================
🗄️ STEP 7: DATABASE INITIALIZATION
================================================================================

### Initialize Database with Sample Data:
# Navigate to backend directory
cd backend

# Initialize database
python init_db.py

# You should see:
# 🌾 Initializing SRI LAKSHMI ENTERPRISES Database...
# ✅ Database tables created successfully!
# 🌱 Adding sample agricultural data...
# ✅ Added 8 sample stock items
# 🎉 Database initialization complete!

================================================================================
🚀 STEP 8: START THE SYSTEM
================================================================================

### Start Backend Server:
# In backend directory (with virtual environment activated)
python app.py

# You should see:
# * Running on all addresses (0.0.0.0)
# * Running on http://127.0.0.1:5001
# * Running on http://YOUR_IP:5001

### Test the API:
# Open new terminal/command prompt
curl http://localhost:5001/
# Should return JSON with API information

### Access Frontend:
# Open web browser and go to:
file:///path/to/your/project/frontend_simple/index.html

# Replace "path/to/your/project" with actual path

================================================================================
🌐 STEP 9: GITHUB PAGES DEPLOYMENT (RECOMMENDED)
================================================================================

GitHub Pages allows you to host the frontend globally for free while keeping
your backend and database secure on your local machine.

### Create GitHub Repository:
1. Go to https://github.com
2. Click "New repository" (+ button in top right)
3. Repository details:
   - Name: stockinventorymanagement_system
   - Description: SRI LAKSHMI ENTERPRISES Stock Management System
   - Visibility: PUBLIC (required for free GitHub Pages)
   - DO NOT initialize with README (we have files already)
4. Click "Create repository"

### Push Your Code to GitHub:
git add .
git commit -m "Initial setup of SRI LAKSHMI ENTERPRISES system"
git branch -M main
git remote add origin https://github.com/YOUR_USERNAME/stockinventorymanagement_system.git
git push -u origin main

### Enable GitHub Pages:
1. Go to your repository: https://github.com/YOUR_USERNAME/stockinventorymanagement_system
2. Click "Settings" tab (top right of repository page)
3. Scroll down and click "Pages" in left sidebar (under "Code and automation")
4. Configure Pages:
   - Source: "Deploy from a branch"
   - Branch: "main"
   - Folder: "/docs" (IMPORTANT: Must select /docs folder)
5. Click "Save"
6. Wait 5-10 minutes for deployment

### Your Website URLs:
- Repository: https://github.com/YOUR_USERNAME/stockinventorymanagement_system
- Live Website: https://YOUR_USERNAME.github.io/stockinventorymanagement_system

### Update API Configuration for GitHub Pages:
Edit docs/config.js file:
PRODUCTION_API_URL: 'http://YOUR_LOCAL_IP:5001/api',

Replace YOUR_LOCAL_IP with your actual IP address from Step 6.

### How GitHub Pages Works:
┌─────────────────┐    ┌──────────────────┐    ┌─────────────────┐
│   GitHub Pages  │───▶│  Your Local API  │───▶│   PostgreSQL    │
│   (Frontend)    │    │   (Backend)      │    │   (Database)    │
│                 │    │                  │    │                 │
│ • Global Access │    │ • Local Machine  │    │ • Local Storage │
│ • Free Hosting  │    │ • Port 5001      │    │ • Secure Data   │
│ • Beautiful UI  │    │ • API Endpoints  │    │ • Fast Queries  │
└─────────────────┘    └──────────────────┘    └─────────────────┘

### Benefits of GitHub Pages Deployment:
✅ FREE hosting for frontend
✅ Global accessibility (anyone can access your site)
✅ Professional web presence
✅ Automatic updates when you push code changes
✅ HTTPS security
✅ Fast loading with CDN
✅ Data stays secure on your local machine

================================================================================
🔧 AUTOMATED SETUP SCRIPTS
================================================================================

### WINDOWS Users:
# Run these batch files in order:
setup_windows.bat
setup_database_windows.bat
start_server_windows.bat

### LINUX Users:
# Run these shell scripts in order:
chmod +x *.sh
./setup_linux.sh
./setup_database_linux.sh
./start_server_linux.sh

### macOS Users:
# Run these shell scripts in order:
chmod +x *.sh
./setup_database.sh
./quick_start.sh

================================================================================
🎯 TESTING YOUR SYSTEM
================================================================================

### Test Checklist:
1. ✅ Backend API running on http://localhost:5001
2. ✅ Frontend accessible via browser
3. ✅ Dashboard shows sample data
4. ✅ Can add new stock items
5. ✅ Can record sales with unit price calculation
6. ✅ Can generate PDF receipts
7. ✅ Can download weekly reports

### Sample Data Included:
- Wheat Seeds (500 units) - AgriSeeds Ltd
- Rice Seeds (300 units) - GreenHarvest Co
- Corn Seeds (250 units) - FarmPro Seeds
- Fertilizer NPK (100 units) - NutriGrow
- Pesticide Spray (75 units) - CropProtect
- Irrigation Pipes (200 units) - WaterFlow Systems
- Garden Tools Set (50 units) - FarmTools Inc
- Organic Compost (150 units) - EcoFarm

================================================================================
🛠️ TROUBLESHOOTING
================================================================================

### PostgreSQL Issues:
# Check if PostgreSQL is running
# WINDOWS:
net start postgresql-x64-17

# macOS:
brew services list | grep postgresql

# LINUX:
sudo systemctl status postgresql

### Python Issues:
# Check Python version (should be 3.8+)
python --version

# Check if virtual environment is active
which python
# Should point to your venv directory

### Port Issues:
# If port 5001 is busy, edit backend/app.py:
# Change: app.run(debug=True, host='0.0.0.0', port=5001)
# To: app.run(debug=True, host='0.0.0.0', port=5002)
# Then update config files accordingly

### Firewall Issues:
# WINDOWS: Allow Python through Windows Defender Firewall
# macOS: System Preferences → Security & Privacy → Firewall
# LINUX: sudo ufw allow 5001

### Database Connection Issues:
# Test database connection manually:
# WINDOWS:
psql -U sri_lakshmi_user -d sri_lakshmi_db -h localhost

# Enter password: your_secure_password
# Should connect successfully

================================================================================
🌐 STEP 10: ACCESSING FROM OTHER SYSTEMS & DEVICES
================================================================================

Once your system is set up, you can access it from multiple devices and locations.

### Access Methods:

#### Method 1: GitHub Pages (Recommended)
- URL: https://YOUR_USERNAME.github.io/stockinventorymanagement_system
- Works from: Anywhere in the world with internet
- Requirements: Your local backend server must be running
- Benefits: Professional URL, HTTPS security, fast loading

#### Method 2: Direct Local Access
- URL: http://YOUR_LOCAL_IP:5001
- Works from: Same network as your computer
- Requirements: Backend server running, firewall configured
- Benefits: Direct connection, no GitHub dependency

#### Method 3: Local File Access
- URL: file:///path/to/frontend_simple/index.html
- Works from: Same computer only
- Requirements: Backend server running locally
- Benefits: No network dependency

### Setting Up Access from Other Computers:

#### Step 1: Configure Your Main Computer
1. Start your backend server: python app.py
2. Note your IP address from Step 6 setup
3. Configure firewall to allow port 5001:
   - Windows: Windows Defender Firewall → Allow app
   - macOS: System Preferences → Security & Privacy → Firewall
   - Linux: sudo ufw allow 5001

#### Step 2: Access from Other Devices
1. Connect devices to same network as your main computer
2. Open web browser on the other device
3. Go to: https://YOUR_USERNAME.github.io/stockinventorymanagement_system
4. The site will automatically connect to your local backend

### Mobile Device Access:
- Use GitHub Pages URL for best experience
- All features work on mobile browsers
- Touch-friendly interface
- PDF downloads work on mobile

### Network Configuration:
- Main computer: Runs backend server (192.168.1.29:5001)
- Other devices: Access via GitHub Pages URL
- Data flow: GitHub Pages → Your Local API → PostgreSQL
- Security: Database never leaves your local network

### Troubleshooting Network Access:
1. Verify backend server is running: curl http://localhost:5001/
2. Check firewall settings allow port 5001
3. Confirm IP address hasn't changed
4. Test local access first, then remote access
5. Check network connectivity between devices

================================================================================
🔒 SECURITY NOTES
================================================================================

1. Change default passwords in production
2. Use HTTPS for production deployment
3. Backup your database regularly:
   pg_dump -U sri_lakshmi_user -h localhost sri_lakshmi_db > backup.sql
4. Keep your system updated
5. Use strong passwords for database users

================================================================================
📞 SUPPORT
================================================================================

### If You Encounter Issues:
1. Check the troubleshooting section above
2. Ensure all prerequisites are installed correctly
3. Verify database connection
4. Check firewall settings
5. Review the COMPLETE_SETUP_GUIDE.md file

### System Features:
- Beautiful farming-themed UI
- PostgreSQL database integration
- Professional PDF receipts with unit pricing
- Advanced search and filtering
- Sales management with automatic stock deduction
- Weekly reports with unit price details
- Cross-platform compatibility

================================================================================
🎉 SUCCESS!
================================================================================

Your SRI LAKSHMI ENTERPRISES Stock Management System is now ready!

Access URLs:
- Local Frontend: file:///path/to/frontend_simple/index.html
- API Server: http://localhost:5001
- Network Access: http://YOUR_IP:5001
- GitHub Pages: https://YOUR_USERNAME.github.io/stockinventorymanagement_system

🌾 Happy Farming with Digital Inventory Management! 🚜

================================================================================
