================================================================================
üåæ SRI LAKSHMI ENTERPRISES - COMPLETE SYSTEM SETUP GUIDE
================================================================================

This guide will help you set up the complete stock management system on ANY computer
from scratch with all commands and PostgreSQL setup included.

================================================================================
üìã SYSTEM REQUIREMENTS
================================================================================

- Operating System: Windows 10+, macOS 10.14+, or Ubuntu 18.04+
- RAM: Minimum 4GB (8GB recommended)
- Storage: At least 2GB free space
- Internet: Required for initial setup

================================================================================
üóÑÔ∏è STEP 1: POSTGRESQL INSTALLATION & SETUP
================================================================================

### FOR WINDOWS:
1. Download PostgreSQL from: https://www.postgresql.org/download/windows/
2. Run the installer (postgresql-17.x-x-windows-x64.exe)
3. During installation:
   - Set password for 'postgres' user (remember this!)
   - Default port: 5432 (keep this)
   - Check "Add PostgreSQL to PATH"
4. After installation, open Command Prompt as Administrator

### FOR macOS:
# Option 1: Using Homebrew (recommended)
brew install postgresql
brew services start postgresql

# Option 2: Download installer from postgresql.org
# Follow same steps as Windows

### FOR UBUNTU/LINUX:
sudo apt update
sudo apt install postgresql postgresql-contrib
sudo systemctl start postgresql
sudo systemctl enable postgresql

================================================================================
üóÑÔ∏è STEP 2: POSTGRESQL DATABASE SETUP
================================================================================

### WINDOWS (Command Prompt as Administrator):
psql -U postgres
# Enter your postgres password when prompted

### macOS/LINUX (Terminal):
sudo -u postgres psql

### IN POSTGRESQL PROMPT (All Systems):
CREATE USER sri_lakshmi_user WITH PASSWORD 'your_secure_password';
CREATE DATABASE sri_lakshmi_db OWNER sri_lakshmi_user;
GRANT ALL PRIVILEGES ON DATABASE sri_lakshmi_db TO sri_lakshmi_user;
ALTER USER sri_lakshmi_user CREATEDB;
\q

================================================================================
üêç STEP 3: PYTHON INSTALLATION
================================================================================

### WINDOWS:
1. Download from: https://www.python.org/downloads/
2. IMPORTANT: Check "Add Python to PATH" during installation
3. Verify: Open Command Prompt and run:
   python --version

### macOS:
# Usually pre-installed, but install latest version
brew install python3

### UBUNTU/LINUX:
sudo apt install python3 python3-pip python3-venv

================================================================================
üì• STEP 4: DOWNLOAD THE PROJECT
================================================================================

### Option 1: Clone from GitHub (Recommended)
git clone https://github.com/Ram2669/stockinventorymanagement_system.git
cd stockinventorymanagement_system

### Option 2: Download ZIP
1. Go to: https://github.com/Ram2669/stockinventorymanagement_system
2. Click "Code" ‚Üí "Download ZIP"
3. Extract the ZIP file
4. Open terminal/command prompt in the extracted folder

================================================================================
üîß STEP 5: PYTHON ENVIRONMENT SETUP
================================================================================

### ALL SYSTEMS:
# Create virtual environment
python -m venv venv

# Activate virtual environment
# WINDOWS:
venv\Scripts\activate

# macOS/LINUX:
source venv/bin/activate

# Install Python dependencies
pip install -r requirements.txt

# If psycopg2 installation fails, try:
# WINDOWS:
pip install psycopg2-binary

# macOS (if PostgreSQL not in PATH):
export PATH="/Library/PostgreSQL/17/bin:$PATH"
pip install psycopg2-binary

# LINUX:
sudo apt-get install libpq-dev
pip install psycopg2-binary

================================================================================
‚öôÔ∏è STEP 6: CONFIGURATION
================================================================================

### Edit Environment File:
# Copy example file
cp backend/.env.example backend/.env

# Edit backend/.env file with your settings:
POSTGRES_USER=sri_lakshmi_user
POSTGRES_PASSWORD=your_secure_password
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_DB=sri_lakshmi_db
FLASK_ENV=development
FLASK_DEBUG=true
SECRET_KEY=your-secret-key-change-in-production

### Find Your Local IP Address:
# WINDOWS:
ipconfig
# Look for "IPv4 Address" (usually 192.168.x.x)

# macOS/LINUX:
ifconfig | grep "inet " | grep -v 127.0.0.1
# Look for your network IP (usually 192.168.x.x)

### Update Frontend Configuration:
# Edit frontend_simple/config.js:
# Replace YOUR_LOCAL_IP with your actual IP address
PRODUCTION_API_URL: 'http://192.168.1.29:5001/api',

# Edit docs/config.js (for GitHub Pages):
# Replace YOUR_LOCAL_IP with your actual IP address
PRODUCTION_API_URL: 'http://192.168.1.29:5001/api',

================================================================================
üóÑÔ∏è STEP 7: DATABASE INITIALIZATION
================================================================================

### Initialize Database with Sample Data:
# Navigate to backend directory
cd backend

# Initialize database
python init_db.py

# You should see:
# üåæ Initializing SRI LAKSHMI ENTERPRISES Database...
# ‚úÖ Database tables created successfully!
# üå± Adding sample agricultural data...
# ‚úÖ Added 8 sample stock items
# üéâ Database initialization complete!

================================================================================
üöÄ STEP 8: START THE SYSTEM
================================================================================

### Start Backend Server:
# In backend directory (with virtual environment activated)
python app.py

# You should see:
# * Running on all addresses (0.0.0.0)
# * Running on http://127.0.0.1:5001
# * Running on http://YOUR_IP:5001

### Test the API:
# Open new terminal/command prompt
curl http://localhost:5001/
# Should return JSON with API information

### Access Frontend:
# Open web browser and go to:
file:///path/to/your/project/frontend_simple/index.html

# Replace "path/to/your/project" with actual path

================================================================================
üåê STEP 9: GITHUB PAGES DEPLOYMENT (OPTIONAL)
================================================================================

### Create GitHub Repository:
1. Go to https://github.com
2. Click "New repository"
3. Name: stockinventorymanagement_system
4. Make it PUBLIC
5. Click "Create repository"

### Push Your Code:
git add .
git commit -m "Initial setup of SRI LAKSHMI ENTERPRISES system"
git branch -M main
git remote add origin https://github.com/YOUR_USERNAME/stockinventorymanagement_system.git
git push -u origin main

### Enable GitHub Pages:
1. Go to repository Settings
2. Click "Pages" in left sidebar
3. Source: "Deploy from a branch"
4. Branch: "main"
5. Folder: "/docs"
6. Click "Save"

# Your site will be live at:
# https://YOUR_USERNAME.github.io/stockinventorymanagement_system

================================================================================
üîß AUTOMATED SETUP SCRIPTS
================================================================================

### WINDOWS Users:
# Run these batch files in order:
setup_windows.bat
setup_database_windows.bat
start_server_windows.bat

### LINUX Users:
# Run these shell scripts in order:
chmod +x *.sh
./setup_linux.sh
./setup_database_linux.sh
./start_server_linux.sh

### macOS Users:
# Run these shell scripts in order:
chmod +x *.sh
./setup_database.sh
./quick_start.sh

================================================================================
üéØ TESTING YOUR SYSTEM
================================================================================

### Test Checklist:
1. ‚úÖ Backend API running on http://localhost:5001
2. ‚úÖ Frontend accessible via browser
3. ‚úÖ Dashboard shows sample data
4. ‚úÖ Can add new stock items
5. ‚úÖ Can record sales with unit price calculation
6. ‚úÖ Can generate PDF receipts
7. ‚úÖ Can download weekly reports

### Sample Data Included:
- Wheat Seeds (500 units) - AgriSeeds Ltd
- Rice Seeds (300 units) - GreenHarvest Co
- Corn Seeds (250 units) - FarmPro Seeds
- Fertilizer NPK (100 units) - NutriGrow
- Pesticide Spray (75 units) - CropProtect
- Irrigation Pipes (200 units) - WaterFlow Systems
- Garden Tools Set (50 units) - FarmTools Inc
- Organic Compost (150 units) - EcoFarm

================================================================================
üõ†Ô∏è TROUBLESHOOTING
================================================================================

### PostgreSQL Issues:
# Check if PostgreSQL is running
# WINDOWS:
net start postgresql-x64-17

# macOS:
brew services list | grep postgresql

# LINUX:
sudo systemctl status postgresql

### Python Issues:
# Check Python version (should be 3.8+)
python --version

# Check if virtual environment is active
which python
# Should point to your venv directory

### Port Issues:
# If port 5001 is busy, edit backend/app.py:
# Change: app.run(debug=True, host='0.0.0.0', port=5001)
# To: app.run(debug=True, host='0.0.0.0', port=5002)
# Then update config files accordingly

### Firewall Issues:
# WINDOWS: Allow Python through Windows Defender Firewall
# macOS: System Preferences ‚Üí Security & Privacy ‚Üí Firewall
# LINUX: sudo ufw allow 5001

### Database Connection Issues:
# Test database connection manually:
# WINDOWS:
psql -U sri_lakshmi_user -d sri_lakshmi_db -h localhost

# Enter password: your_secure_password
# Should connect successfully

================================================================================
üì± MOBILE ACCESS
================================================================================

### Access from Mobile Devices:
1. Make sure your backend server is running
2. Find your computer's IP address (Step 6)
3. On mobile browser, go to: http://YOUR_IP:5001
4. GitHub Pages site works on mobile: https://YOUR_USERNAME.github.io/stockinventorymanagement_system

================================================================================
üîí SECURITY NOTES
================================================================================

1. Change default passwords in production
2. Use HTTPS for production deployment
3. Backup your database regularly:
   pg_dump -U sri_lakshmi_user -h localhost sri_lakshmi_db > backup.sql
4. Keep your system updated
5. Use strong passwords for database users

================================================================================
üìû SUPPORT
================================================================================

### If You Encounter Issues:
1. Check the troubleshooting section above
2. Ensure all prerequisites are installed correctly
3. Verify database connection
4. Check firewall settings
5. Review the COMPLETE_SETUP_GUIDE.md file

### System Features:
- Beautiful farming-themed UI
- PostgreSQL database integration
- Professional PDF receipts with unit pricing
- Advanced search and filtering
- Sales management with automatic stock deduction
- Weekly reports with unit price details
- Cross-platform compatibility

================================================================================
üéâ SUCCESS!
================================================================================

Your SRI LAKSHMI ENTERPRISES Stock Management System is now ready!

Access URLs:
- Local Frontend: file:///path/to/frontend_simple/index.html
- API Server: http://localhost:5001
- Network Access: http://YOUR_IP:5001
- GitHub Pages: https://YOUR_USERNAME.github.io/stockinventorymanagement_system

üåæ Happy Farming with Digital Inventory Management! üöú

================================================================================
